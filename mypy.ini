[mypy]
# Import discovery

## Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = True

# Platform configuration

python_version = 3.10

# Disallow dynamic typing

## Disallows usage of generic types that do not specify explicit type parameters.
disallow_any_generics = True

## Disallows subclassing a value of type .Any
disallow_subclassing_any = True

# Untyped definitions and calls

## Disallows calling functions without type annotations.
disallow_untyped_calls = False

## Disallows defining functions without type annotations.
disallow_untyped_defs = True

## Type-checks the interior of functions without type annotations.
check_untyped_defs = True

## Reports an error whenever a function with type annotations
## is decorated with a decorator without annotations.
disallow_untyped_decorators = False

# None and Optional handling

## Causes mypy to treat parameters with a default value
## as having an implicit optional type ().NoneT | None
implicit_optional = True

## Effectively disables checking of optional types and values.
strict_optional = True

# Configuring warnings

## Warns about casting an expression to its inferred type.
warn_redundant_casts = True

## Warns about unneeded comments.# type: ignore
warn_unused_ignores = False

## Shows errors for missing return statements on some execution paths.
warn_no_return = True

## Shows a warning when returning a value with type
## from a function declared with a non- return type.Any Any
warn_return_any = True

## Shows a warning when encountering any code inferred to be unreachable.
warn_unreachable = True

# Miscellaneous strictness flags

## Causes mypy to suppress errors caused
## by not being able to fully infer the types of global and class variables.
allow_untyped_globals = False

## mypy wonâ€™t allow a variable to be redefined with an unrelated type.
allow_redefinition_new = False

## Allows variables to be redefined with an arbitrary type
allow_redefinition = False

## Prohibit equality checks, identity checks, and container checks
## between non-overlapping types
strict_equality = True

## When false, mypy will not re-export unless the item is imported
## using from-as or is included in .
implicit_reexport = False

## Include in strict equality checks None
strict_equality_for_none = True

## Configuring error messages

## Prefixes each error with the relevant context.
show_error_context = True

## Shows column numbers in error messages.
show_column_numbers = True

## Use visually nicer output in error messages
pretty = True

## Shows error messages with color enabled.
color_output = True

## Shows a short summary line after error messages.
error_summary = True

# Advanced options

## Shows traceback on fatal error.
show_traceback = True

# Report generation

## Causes mypy to generate a text file report documenting
## how many expressions of type are present within your codebase.Any
any_exprs_report = mypy_reports/any_exprs_report

## Causes mypy to generate an HTML type checking coverage report.
html_report = mypy_reports/html_report

## Causes mypy to generate a text file type checking coverage report.
txt_report=mypy_reports/txt_report

# Miscellaneous

## Warns about per-module sections in the config file
## that do not match any files processed when invoking mypy.
warn_unused_configs = True
